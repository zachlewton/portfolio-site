"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBiggerThanLaptop = exports.isLaptopDevice = exports.isTabletDevice = exports.isMobileDevice = exports.getDeviceTypeInfo = exports.getWindowDimension = exports.IdMobileHeight = exports.IdDeviceBreakpointsByWidth = exports.DeviceWidthObject = void 0;
var DeviceWidthObject = {
  MobileSmall: {
    max: 320,
    min: 0
  },
  MobileMedium: {
    max: 375,
    min: 321
  },
  MobileLarge: {
    max: 767,
    min: 376
  },
  Tablet: {
    max: 991,
    min: 768
  },
  LaptopSmall: {
    max: 1024,
    min: 992
  },
  LaptopLarge: {
    max: 1440,
    min: 1025
  },
  LargerThanLaptop: {
    max: 2560,
    min: 1441
  },
  LargeScreenMax: {
    max: 999999,
    min: 2561
  }
};
exports.DeviceWidthObject = DeviceWidthObject;
var IdDeviceBreakpointsByWidth = {
  laptop_max: 1440,
  laptop_min: 992,
  tablet_min: 768,
  tablet_max: 991,
  mobile_max: 767,
  default_min: 768 // Unrecognized device

};
exports.IdDeviceBreakpointsByWidth = IdDeviceBreakpointsByWidth;
var IdMobileHeight = {
  mobileLandscape_min: 320,
  mobileLandscape_max: 425
};
exports.IdMobileHeight = IdMobileHeight;

var getWindowDimension = function getWindowDimension() {
  var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
  var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
  return {
    width: width,
    height: height
  };
};

exports.getWindowDimension = getWindowDimension;

var getDeviceTypeInfo = function getDeviceTypeInfo() {
  var windowDimension = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getWindowDimension();
  var width = windowDimension.width,
      height = windowDimension.height;
  var buildDeviceDetails = {
    deviceType: "",
    deviceTypeVariant: "",
    orientation: "Portrait",
    width: width,
    height: height,
    isFallback: false
  }; //  Edge case

  var hasEdgeCase = handleExceptions(buildDeviceDetails, width, height);

  if (hasEdgeCase) {
    return hasEdgeCase;
  }

  if (height < width) {
    // Orientation is landscape
    buildDeviceDetails.orientation = "Landscape";

    if (height <= IdMobileHeight.mobileLandscape_max) {
      // Mobile (landscape)
      buildDeviceDetails.deviceType = "Mobile";

      for (var devc in DeviceWidthObject) {
        if (height <= DeviceWidthObject[devc].max && height >= DeviceWidthObject[devc].min) {
          buildDeviceDetails.deviceTypeVariant = devc;
          break;
        }
      }
    } else if (width <= IdDeviceBreakpointsByWidth.tablet_max && width >= IdDeviceBreakpointsByWidth.tablet_min) {
      // Tablet (landscape)
      buildDeviceDetails.deviceType = "Tablet";
      buildDeviceDetails.deviceTypeVariant = "Tablet";
    } else if (width <= IdDeviceBreakpointsByWidth.laptop_max && width >= IdDeviceBreakpointsByWidth.laptop_min) {
      // Laptop (landscape)
      buildDeviceDetails.deviceType = "Laptop";

      for (var _devc in DeviceWidthObject) {
        if (width <= DeviceWidthObject[_devc].max && width >= DeviceWidthObject[_devc].min) {
          buildDeviceDetails.deviceTypeVariant = _devc;
          break;
        }
      }
    } else if (width > IdDeviceBreakpointsByWidth.laptop_max) {
      // Larger than Laptop (landscape)
      buildDeviceDetails.deviceType = "LargerThanLaptop";

      for (var _devc2 in DeviceWidthObject) {
        if (width <= DeviceWidthObject[_devc2].max && width >= DeviceWidthObject[_devc2].min) {
          buildDeviceDetails.deviceTypeVariant = _devc2;
          break;
        }
      }
    } else {
      // TODO: UNKNOWN realm
      buildDeviceDetails.deviceType = "Mobile";
      buildDeviceDetails.deviceTypeVariant = "MobileLarge";
      buildDeviceDetails.isFallback = true;
    }

    return buildDeviceDetails;
  } else {
    // Orientation is portrait
    buildDeviceDetails.orientation = "Portrait";

    for (var _devc3 in DeviceWidthObject) {
      if (width <= DeviceWidthObject[_devc3].max && width >= DeviceWidthObject[_devc3].min) {
        buildDeviceDetails.deviceTypeVariant = _devc3;
        break;
      }
    }

    if (width <= IdDeviceBreakpointsByWidth.laptop_max && width >= IdDeviceBreakpointsByWidth.laptop_min) {
      buildDeviceDetails.deviceType = "Laptop";
    }

    if (width <= IdDeviceBreakpointsByWidth.tablet_max && width >= IdDeviceBreakpointsByWidth.tablet_min) {
      buildDeviceDetails.deviceType = "Tablet";
    }

    if (width <= IdDeviceBreakpointsByWidth.mobile_max) {
      buildDeviceDetails.deviceType = "Mobile";
    }

    if (width > IdDeviceBreakpointsByWidth.laptop_max) {
      buildDeviceDetails.deviceType = "LargerThanLaptop";
    }

    return buildDeviceDetails;
  }
};

exports.getDeviceTypeInfo = getDeviceTypeInfo;

var handleExceptions = function handleExceptions(buildDeviceDetails, width, height) {
  //  iPadPro
  if (width === 1024 && height === 1366) {
    buildDeviceDetails.deviceType = "Tablet";
    buildDeviceDetails.deviceTypeVariant = "iPadPro";
    buildDeviceDetails.orientation = "Portrait";
    return buildDeviceDetails;
  } else if (width === 1366 && height === 1024) {
    //  Edge case
    buildDeviceDetails.deviceType = "Tablet";
    buildDeviceDetails.deviceTypeVariant = "iPadPro";
    buildDeviceDetails.orientation = "Landscape";
    return buildDeviceDetails;
  }

  return undefined;
};

var isMobileDevice = function isMobileDevice() {
  var deviceInformation = getDeviceTypeInfo();
  return deviceInformation.deviceType === "Mobile";
};

exports.isMobileDevice = isMobileDevice;

var isTabletDevice = function isTabletDevice() {
  var deviceInformation = getDeviceTypeInfo();
  return deviceInformation.deviceType === "Tablet";
};

exports.isTabletDevice = isTabletDevice;

var isLaptopDevice = function isLaptopDevice() {
  var deviceInformation = getDeviceTypeInfo();
  return deviceInformation.deviceType === "Laptop";
};

exports.isLaptopDevice = isLaptopDevice;

var isBiggerThanLaptop = function isBiggerThanLaptop() {
  var deviceInformation = getDeviceTypeInfo();
  return deviceInformation.deviceType === "LargerThanLaptop";
};

exports.isBiggerThanLaptop = isBiggerThanLaptop;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,